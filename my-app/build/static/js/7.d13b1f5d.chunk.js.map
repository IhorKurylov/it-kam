{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","Utils/Validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAA6C,EAA5CC,MAA6C,IAAD,IAArCC,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC1CC,EAAWF,GAASD,EAC1B,OACI,yBAAKI,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,MAClE,6BACKC,GAEJC,GAAY,8BAAOF,KAKnBM,EAAW,SAACC,GAAW,IACzBV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADiB,YACKS,EADL,mBAE/B,OAAO,kBAACX,EAAgBW,EAAjB,IAAyB,8CAAcV,EAAWW,IAAlD,MAGEC,EAAQ,SAACF,GAAW,IACtBV,EAA6BU,EAA7BV,MAAgBW,GAAaD,EAAtBT,KADc,YACQS,EADR,mBAE5B,OAAO,kBAACX,EAAgBW,EAAjB,IAAyB,2CAAWV,EAAWW,MAG7CE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CP,EAA3C,uDAAiD,GAAIQ,EAArD,uDAA0D,GAA1D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EAAaC,KAAMA,EAAME,UAAWA,EAAWE,SAAUH,GAAgBN,IADjG,IAC2GQ,K,iCC5B/G,oEAAO,IAAME,EAAW,SAAAC,GACpB,IAAGA,EAEH,MAAO,qBAIEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMG,OAASD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCRlC,gGA0BME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAhBL,SAAChB,GACf,OACI,0BAAMkB,SAAUlB,EAAMmB,cACjBhB,YAAY,QAAS,QAAS,CAACO,KAAWR,KAC1CC,YAAY,WAAY,WAAY,CAACO,KAAWR,IAAO,CAACkB,KAAM,aAC9DjB,YAAY,KAAM,aAAc,KAAMD,IAAO,CAACkB,KAAM,YAAa,eACjEpB,EAAMP,OAAS,yBAAKG,UAAWC,IAAOwB,kBAClCrB,EAAMP,OAEX,6BACI,8CA+BD6B,uBANS,SAACC,GACrB,MAAQ,CACJC,OAAQD,EAAME,KAAKD,UAIa,CAACE,WAA1BJ,EAvBD,SAACtB,GAKX,OAAIA,EAAMwB,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGlB,6BACH,qCAGA,kBAACZ,EAAD,CAAgBG,SAZH,SAACU,GACd5B,EAAM0B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.d13b1f5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2IuqO\",\"error\":\"FormsControls_error__2EhOG\",\"formSummaryError\":\"FormsControls_formSummaryError__3q0DP\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta:{touched, error}, children}) => {\r\n    const hasError = error && touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \" \")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/> {text}\r\n    </div>\r\n);","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required'\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength ) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        {/*<span>For testing use Email: free@samuraijs.com</span><br/>*/}\r\n        {/*<span>For testing use Password: free</span>*/}\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n\r\n// Email: free@samuraijs.com\r\n//\r\n// Password: free"],"sourceRoot":""}